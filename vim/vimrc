" Leader mapping summary
"
" Multi-key mappings
"   <leader><leader>*  ! versions (like :make!)
"   <leader>c*         colorscheme
"   <leader>h*         Haxe
"   <leader>i*         indentation
"   <leader>p*         Ctrl-P
"   <leader>s*         spell
"
" Single-key mappings (for now)
"   <leader>           recall last command
"   <leader>l          nohlsearch
"   <leader>m          make
"   <leader>n          NERDTree


" Use Vim, not Vi
set nocompatible

" Pathogen
execute pathogen#infect()
"call pathogen#helptags() "

" Basic
set mouse=a
set number
let mapleader = ','
" move up/down using display lines
" only on normal and visual modes
nmap j gj
vmap j gj
nmap k gk
vmap k gk

" Startify
" requires fortunes and cowsay
let g:startify_custom_header =
            \ map(split(system('fortune | cowsay -f tux'), '\n'), '"   ". v:val') + ['']

" Indentation
filetype plugin indent on
set autoindent  " autoindenting always on
" (don't indent switch cases)
set cinoptions+=:0
" (default to spaces, no tabs, and width=4)
set expandtab tabstop=4 shiftwidth=4
nnoremap <leader>id :setlocal expandtab tabstop=4 shiftwidth=4<cr>
" (set linux kernel style)
nnoremap <leader>ik :setlocal noexpandtab tabstop=8 shiftwidth=8 softtabstop=8<cr>

" Colors
" Default to transparent monokai but set bindings to change
colorscheme monokait
noremap <leader>ct :colorscheme monokait<cr>
noremap <leader>co :colorscheme monokai<cr>

" Searching
set incsearch
set ignorecase
set smartcase  " /foo matches FOO and fOo; /FOO only matches FOO
set hlsearch   " highlight searh matches
noremap <leader>l :nohlsearch<cr>

" Other
set autowrite  " autowrite on a bunch of times including :make
set autoread   " autoread when buffer is unchanged

" Commands
noremap <leader><cr> :<c-p>

" Haxe
" (vaxe)
:let g:vaxe_prefer_first_in_directory = 0
noremap <leader>hh :call vaxe#DefaultHxml()<cr>
noremap <leader>hi <esc>:call vaxe#ImportClass()<cr>
noremap <leader>ht <esc>:call vaxe#Ctags()<cr>
" (tcomment)
if !exists("g:tcommentBlockHx")  " Based on g:tcommentBlockC
    let g:tcommentBlockHx = {
                \ 'commentstring': '/*%s*/',
                \ 'middle': '    ',
                \ 'rxbeg': '\*\+',
                \ 'rxend': '',
                \ 'rxmid': '',
                \ 'replacements': g:tcomment#replacements_c
                \ }
endif
call tcomment#DefineType('haxe', '// %s')
call tcomment#DefineType('haxe_inline', g:tcommentInlineC)
call tcomment#DefineType('haxe_block', g:tcommentBlockHx)

" CtrlP
noremap <leader>pb :CtrlPBookmarkDir<cr>
noremap <leader>pd :CtrlPDir<cr>

" NERDTree
noremap <leader>n :NERDTree<cr>

" Make
noremap <leader>m <esc>:make<cr>
noremap <leader><leader>m <esc>:make!<cr>

" Spell
nnoremap <leader>sl :setlocal nospell<cr>
nnoremap <leader>se :setlocal spell spelllang=en<cr>
nnoremap <leader>sp :setlocal spell spelllang=pt_br<cr>

" Change directories automatically
autocmd BufEnter * lcd %:p:h

" Better buffer switching
:set switchbuf=useopen,usetab

